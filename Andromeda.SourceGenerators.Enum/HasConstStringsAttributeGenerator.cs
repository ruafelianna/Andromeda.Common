using Microsoft.CodeAnalysis;
using System;
using static Andromeda.CSharp.Consts.Comments;
using static Andromeda.CSharp.Consts.Directives;
using static Andromeda.CSharp.Consts.Extensions;
using static Andromeda.CSharp.Consts.Keywords;
using static Andromeda.CSharp.Consts.Namespaces;
using static Andromeda.CSharp.Consts.Prefixes;
using static Andromeda.SourceGenerators.Enum.InternalConsts;

namespace Andromeda.SourceGenerators.Enum
{
    [Generator(LanguageNames.CSharp)]
    public class HasConstStringsAttributeGenerator : IIncrementalGenerator
    {
        public void Initialize(IncrementalGeneratorInitializationContext context)
        {
            context.RegisterPostInitializationOutput(ctx => {
                ctx.AddSource(
                    $"{NS_Local}.{A_HasConstStringsFull}{EXT_GeneratedCSharp}",
                    GetSourceCode()
                );
            });
        }

        private static string GetSourceCode()
            => $@"{C_Autogenerated}

{DIR_NullableRestore}

{KW_Using} {PRE_Global}{NS_System};

{KW_Namespace} {NS_Local}
{{
    [{nameof(AttributeUsageAttribute)}({nameof(AttributeTargets)}.{nameof(AttributeTargets.Enum)})]
    {KW_Internal} {KW_Class} {A_HasConstStringsFull} : {nameof(Attribute)}
    {{
        {KW_Public} {KW_String}? {P_HasConstStrings_ConstNamespace} {{ {KW_Get}; {KW_Set}; }}

        {KW_Public} {KW_String}? {P_HasConstStrings_ConstClass} {{ {KW_Get}; {KW_Set}; }}

        {KW_Public} {KW_String}? {P_HasConstStrings_ExtNamespace} {{ {KW_Get}; {KW_Set}; }}

        {KW_Public} {KW_String}? {P_HasConstStrings_ExtClass} {{ {KW_Get}; {KW_Set}; }}
    }}
}}";
    }
}
